/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY_L 0
#define NAV_L 1
#define SYM_L 2
#define FUN_L 3

/ {
	keymap {
		compatible = "zmk,keymap";

        // QWERTY
		qwerty_layer {
			bindings = <
                   &kp Q        &kp W         &kp E         &kp R              &kp T              &kp Y               &kp U            &kp I                 &kp O         &kp P
                   &kp A        &kp S         &kp D         &kp F              &kp G              &kp H               &kp J            &kp K                 &kp L         &kp SEMI
                   &kp Z        &kp X         &kp C         &kp V              &kp B              &kp N               &kp M            &kp COMMA             &kp DOT       &kp SLASH
				 /*&            &*/           &kp LGUI      &kp LSHIFT         &lt SYM_L ESC      &lt NAV_L ENTER     &kp SPACE        &kp TAB    /* &             &*/
			>;
		};

        // NAV
		nav_layer {
			bindings = <
                   &kp N1       &kp N2        &kp N3        &kp N4             &kp N5             &kp N6              &kp N7           &kp N8                &kp N9        &kp N0
                   &trans       &kp C_PREV    &kp C_PP      &kp C_NEXT         &kp C_VOL_UP       &kp LEFT            &kp DOWN         &kp UP                &kp RIGHT     &trans
                   &sk LSHFT    &sk LCTRL     &sk LALT      &sk LGUI           &kp C_VOL_DN       &kp HOME            &kp PG_DN        &kp PG_UP             &kp END       &trans
				 /*&            &*/           &trans        &trans             &trans             &trans              &trans           &trans    /* &             &*/
			>;
		};

        // SYM
		sym_layer {
			bindings = <
                   &kp EXCL     &kp AT        &kp LBRC      &kp RBRC           &kp PIPE           &kp STAR            &kp EQUAL        &kp GT                &kp BSLH      &kp SLASH
                   &kp HASH     &kp C_PREV    &kp LPAR      &kp RPAR           &kp GRAVE          &kp PLUS            &kp MINUS        &kp APOS              &kp DQT       &kp COLON
                   &kp PRCNT    &kp CARET     &kp LBKT      &kp RBKT           &kp TILDE          &kp AMPS            &kp UNDER        &kp LT                &kp GT        &kp QMARK
				 /*&            &*/           &trans        &trans             &trans             &trans              &kp BSPC         &trans    /* &             &*/
			>;
		};


        // FUN
		fun_layer {
			bindings = <
                   &kp F9       &kp F10       &kp F11       &kp F12            &trans             &trans              &trans           &trans                &trans        &trans  
                   &kp F5       &kp F6        &kp F7        &kp F8             &kp LG(GRAVE)      &kp LS(LC(TAB))     &trans           &kp LC(TAB)           &trans        &trans 
                   &kp F1       &kp F2        &kp F3        &kp F4             &trans             &trans              &trans           &kp LA(BSPC)          &kp LG(BSPC)  &trans 
				 /*&            &*/           &trans        &trans             &trans             &trans              &trans           &trans    /* &             &*/
			>;
		};
	};

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
